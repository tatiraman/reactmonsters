{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search/search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchValue","fetch","then","res","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAGaA,G,MAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,+BAAKL,EAAMI,QAAQE,KAAnB,OACA,8BAAIN,EAAMI,QAAQG,MAAlB,YCFKC,G,MAAW,SAACR,GACrB,OAAO,qBAAKC,UAAU,YAAf,SACFD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNlBM,EAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBAAOC,KAAK,SAASF,YAAaA,EAAaG,SAAWF,KCkC/CG,G,wDA/Bd,aAAgB,IAAD,8BACZ,gBACKC,MAAQ,CACXR,SAAU,GACVS,YAAY,IAJF,E,gEAQO,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAASc,Y,+BAG9B,IAAD,SAEuBE,KAAKR,MAA7BR,EAFC,EAEDA,SAASS,EAFR,EAEQA,YACVQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAC7CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAEnD,OACA,sBAAK3B,UAAU,MAAf,UACE,oBAAIA,UAAU,YAAd,8BACC,cAAC,EAAD,CAAWW,YAAY,kBACvBC,aAAe,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAYY,EAAEC,OAAOC,WACzD,cAAC,EAAD,CAAUvB,SAAUiB,W,GA1BRO,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.eb13ae36.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h1>{props.monster.name} </h1>\r\n        <p>{props.monster.email} </p>\r\n    </div>\r\n);","import React from 'react';\r\nimport { Card } from '../card/card';\r\n\r\nimport './card-list.css';\r\n\r\nexport const CardList = (props) => {\r\n    return <div className='card-list'>\r\n        {props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster} />\r\n        ))}\r\n    </div>\r\n};","import React from 'react';\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) => (\r\n    <input type='search' placeholder={placeholder} onChange= {handleChange}></input> \r\n)","import React from 'react';\nimport {CardList} from './components/card-list/card-list';\nimport {SearchBox} from './components/search/search';\nimport './App.css';\n\nclass App extends React.Component {\n constructor () {\n    super();\n    this.state = {\n      monsters :[],\n      searchValue:''\n    };\n  }\n  \n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res => res.json()\n    .then(users => this.setState({monsters:users})));\n  }\n\n  render () {\n\n    const {monsters,searchValue} = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n       monster.name.toLowerCase().includes(searchValue.toLowerCase()));\n  \n    return (\n    <div className=\"App\">\n      <h1 className='headerApp'>Monsters Rolodex</h1>\n       <SearchBox placeholder='search monsters' \n       handleChange={ e => this.setState({searchValue:e.target.value})} />\n      <CardList monsters={filteredMonsters} />\n     </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}